[
    {
        "id": "b7edb48f.cf6568",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e36a7219.5c62f",
        "type": "ui_template",
        "z": "b7edb48f.cf6568",
        "group": "",
        "name": "D3 libraries",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/4.10.2/d3.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/d3-jetpack-module@0.0.19/build/d3-jetpack-module.min.js\"></script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 135,
        "y": 324,
        "wires": [
            []
        ]
    },
    {
        "id": "7010bfa0.fdc47",
        "type": "json",
        "z": "b7edb48f.cf6568",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 564,
        "y": 385,
        "wires": [
            [
                "adf08c2a.dd279"
            ]
        ]
    },
    {
        "id": "99e4eca3.7a8af",
        "type": "delay",
        "z": "b7edb48f.cf6568",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 353.00003814697266,
        "y": 388.00000953674316,
        "wires": [
            [
                "7010bfa0.fdc47"
            ]
        ]
    },
    {
        "id": "adf08c2a.dd279",
        "type": "function",
        "z": "b7edb48f.cf6568",
        "name": "RAZ to XY",
        "func": "// Range Azimuth and Zenith to X, Y for display\n// 0 rad is straight down from Node\nif (!msg.payload.twr) return;\nif (!msg.payload.twr.raz) return;\n\ntwr = msg.payload.twr;\nx = twr.raz[0] * Math.cos(twr.raz[1]-Math.PI/2.0);\ny = -twr.raz[0] * Math.sin(twr.raz[1]-Math.PI/2.0);\n\nif (isNaN(x) || isNaN(y)) return;\n\nvar averages = context.get('pdoa_averages') || {\n    'x' : x, 'y' : y\n};\nif (isNaN(averages.x) || isNaN(averages.y)) {\n    averages = {\n        'x' : x, 'y' : y\n    };  \n}\nvar f = 0.2;\naverages.x = (1.0-f)*averages.x + f*x;\naverages.y = (1.0-f)*averages.y + f*y;\ncontext.set('pdoa_averages', averages)\n\nreturn {\"topic\":msg.payload.uid, \n    \"payload\":[\n        {\"id\":msg.payload.uid,\"x\":x,\"y\":y,\"radius\":1.5,\"is_average\":false,\"age\":0.0},\n        {\"id\":'avg('+msg.payload.uid+')',\"x\":averages.x,\"y\":averages.y,\"radius\":0.3,\"is_average\":true,\"age\":0.0},\n        ]};",
        "outputs": 1,
        "noerr": 0,
        "x": 744.9999847412109,
        "y": 386.99999618530273,
        "wires": [
            [
                "53808daf.732ae4"
            ]
        ]
    },
    {
        "id": "53808daf.732ae4",
        "type": "ui_template",
        "z": "b7edb48f.cf6568",
        "group": "352e8057.feb55",
        "name": "PdoaView",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style type=\"text/css\"> \n    #pdoaview {\n        background-color: whitesmoke;\n        width: 600px;\n        height: 600px;\n    }\n\n    #pdoaview rect {\n        fill: steelblue;\n    }\n\n    #pdoaview circle {\n        fill: red;\n        opacity: 0.7;\n    }\n\n    .grid line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n    }\n     \n    #pdoaview .grid path {\n        stroke-width: 0;\n        fill: none;\n    }\n\n    #pdoaview .domain {\n        fill: none;\n    }\n\n    .chart text {\n        fill: white;\n        font: 10px sans-serif;\n        text-anchor: end;\n    }\n</style>\n\n<svg id=\"pdoaview\">\n    <!-- svg content goes here -->\n</svg>\n\n<script type=\"text/javascript\">\n(function(scope) { \nvar timer = setInterval(function() { //check that the d3 libs are loaded, if not wait\n    if (!window.d3) return;\n    clearInterval(timer);\n    \n    // set the dimensions and margins of the graph\n    var margin = {top: 10, right: 10, bottom: 30, left: 60}\n    var width = 630 - margin.left - margin.right;\n    var height = 600 - margin.top - margin.bottom;\n    console.log(\"width:\" + width);\n    console.log(\"height:\" + height);\n    var scale = 8; //getURLParameter('scale');\n\n    var x = d3.scaleLinear()\n                .range([margin.left, width])\n                .domain([-scale/2, scale/2]);\n     \n    var y = d3.scaleLinear()\n                .range([height, margin.top])\n                .domain([scale,0]);\n\n\n    // gridlines in x axis function\n    function make_x_gridlines() {\t\t\n        return d3.axisBottom(x).ticks(scale);\n    }\n     \n     // gridlines in y axis function\n    function make_y_gridlines() {\t\t\n        return d3.axisLeft(y).ticks(scale);\n    }\n    // append the svg object to the body of the page\n    var svg = d3.select(\"#pdoaview\")\n        .append(\"svg:svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n\n    // add the X gridlines\n    svg.append(\"g\")\n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\"+(height)+\")\")\n        .call(make_x_gridlines()\n        .tickSize(-height+margin.top)\n        .tickFormat(\"\")\n        );\n\n    // add the Y gridlines\n    svg.append(\"g\")\t\t\n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(\" + margin.top + \",0)\")\n        .call(make_y_gridlines()\n        .tickSize(-width+margin.top*2)\n        .tickFormat(\"\")\n        )\n     \n    var svgg = svg.append(\"g\");\n    // Draw the anchor\n    svgg.append(\"rect\")\n        .attr(\"x\", x(0)-10)\n        .attr(\"y\", 10)\n        .attr(\"width\", 20)\n        .attr(\"height\", 20)\n        .style(\"stroke\", \"#000\");\n\n    var xAxis = d3.axisBottom(x)\n                       .tickValues([-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10]);\n    var yAxis = d3.axisLeft(y)\n                       .tickValues([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\n\n    svg.append(\"g\")\n        .call(xAxis)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(20,0)\")\n        .call(yAxis);\n\n    // Functions for mapping the json input to what d3 uses\n    var xFn = function(d) { return d.x }\n    var yFn = function(d) { return d.y }\n    var radius = function(d) { return x(d.radius)/(scale*2); }\n    var agefade = function(d){\n        var maxt = 5;\n        if (d.age < 0.5) return 0.8;\n        if (d.age < maxt) return 0.8 - d.age/maxt;\n        return 0.0;\n    }\n    \n    // A function that update the chart\n    svg.update = function(data) {\n\n        var instantgroup = svgg.selectAll(\"g\").filter(\".instant\");\n        var elem = instantgroup.data(data, function(d,i) { return d.id; } );\n\n        // Dissapearing fade\n        elem.exit().transition().duration(200).style(\"opacity\", 0.0);\n\n        var elemEnter = elem.enter()\n                            .append(\"g\")\n                            .attr(\"class\", \"instant\")\n                            .attr(\"id\", function(d) { return \"tag\" + d.id; } )\n                            .style(\"opacity\", 0.8)\n                            .attr(\"transform\", function(d){return \"translate(\"+x(xFn(d))+\",\"+y(yFn(d))+\")\";});\n\n        var circ = elemEnter.append(\"svg:circle\")\n                    .style(\"fill\", function(d) { return (d.is_average)?\"blue\" : \"red\"; })\n                    .attr(\"r\", function(d) { return radius(d); })\n                    .style(\"stroke\", \"#000\");\n\n        var txt = elemEnter.append(\"text\")\n                .attr(\"dx\", function(d){return (d.is_average)? 20 : -3;})\n                .attr(\"dy\", function(d){return (d.is_average)? 0 : 4;})\n                .text(function(d){return (d.is_average)? \"t\"+d.id : \"\"+d.id;});\n             \n        elem.merge(elemEnter).\n                    transition()\n                        .duration(50)\n                        .style(\"opacity\", function(d) { return agefade(d); } )\n                        .attr(\"transform\", function(d){return \"translate(\"+x(xFn(d))+\",\"+y(yFn(d))+\")\"})\n                        .attr(\"r\", function(d) { return radius(d); });\n\n         var circ = elem.selectAll(\"circle\");\n         circ.transition()\n                .duration(50)\n                .style(\"fill\", function(d) { return (d.is_average)?\"blue\" : \"red\"; })\n                .attr(\"r\", function(d) { return radius(d); })\n    }\n\n    // watch for msgs from node-red\n    scope.$watch('msg.payload', function(payload) {\n        svg.update(payload);\n    })    \n    }, 100);// Close out setInterval\n})(scope);\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 946.9999771118164,
        "y": 388.9999895095825,
        "wires": [
            []
        ]
    },
    {
        "id": "72c1f9fc.85bab8",
        "type": "serial in",
        "z": "b7edb48f.cf6568",
        "name": "",
        "serial": "7c4436b2.544378",
        "x": 138,
        "y": 387,
        "wires": [
            [
                "99e4eca3.7a8af"
            ]
        ]
    },
    {
        "id": "352e8057.feb55",
        "type": "ui_group",
        "z": "",
        "name": "AoA",
        "tab": "31ce7246.25a33e",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "7c4436b2.544378",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "460800",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "31ce7246.25a33e",
        "type": "ui_tab",
        "z": "",
        "name": "PdoaView",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
